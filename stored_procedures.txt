--< NUMBER 1 >--
--< Counts # of past and current employees in department >--

Delimiter $$
CREATE PROCEDURE sp_employees_in_dept (
	IN department_number char(4),
	OUT num_employees int
)
BEGIN
	SELECT COUNT(*)
	INTO num_employees
	FROM current_dept_emp
	Where dept_no = department_number;
END $$

Delimiter ; $$

		--<to call it and test>--
CALL sp_employees_in_dept('d009', @num_employees);
SELECT @num_employees;

		--< just to test total >--
Select count(*) from current_dept_emp where dept_no = 'd009';




--< NUMBER 2 >--
--< Counts # of current employees in department >--

Delimiter $$
CREATE PROCEDURE sp_curr_employees_in_dept (
	IN department_number char(4),
	OUT num_curr_employees int
)
BEGIN
	SELECT COUNT(*)
	INTO num_curr_employees
	FROM current_dept_emp
	Where to_date = '9999-01-01'
		AND dept_no = department_number;
END $$

Delimiter ; $$

		--<to call it and test>--
CALL sp_curr_employees_in_dept('d009', @num_curr_employees);
SELECT @num_curr_employees;
             
		--< just to test total >--
Select dept_no, COUNT(*) 
from current_dept_emp 
where to_date = '9999-01-01' AND dept_no = 'd009';




--< NUMBER 3 >--
--< Calls the stored procedures in #1 & #2 to display past and current employees >--

Delimiter $$
CREATE PROCEDURE sp_employee_turnover (
	IN department_number char(4)	
)
BEGIN
	DECLARE department_name varchar(40);
	DECLARE prior_employees int;

	CALL sp_employees_in_dept(
	department_number, @num_employees);
	CALL sp_curr_employees_in_dept(
	department_number, @num_curr_employees);

	SELECT dept_name, SUM(@num_employees - @num_curr_employees)
	INTO department_name, prior_employees
	FROM departments
	WHERE dept_no = department_number;

	SELECT concat(department_name, ' has ', @num_curr_employees, 
	' current employees, and ', prior_employees, ' prior employees.') 
	AS Result;
END $$

Delimiter ; $$

		--<to call it and test>--
CALL sp_employee_turnover('d009');
               



--< NUMBER 4 >--
--< Calls a previous procedure and checks dept size >-- 

Delimiter $$

CREATE PROCEDURE sp_dept_size(
	IN department_number char(4)
)
BEGIN
	DECLARE department_name varchar(40);	
	DECLARE dept_type varchar(10);	

	CALL sp_curr_employees_in_dept(
	department_number, @curr_num_employees);	

	IF @curr_num_employees > 18000 THEN
		SET dept_type = 'large';
	ELSEIF @curr_num_employees > 60000 THEN
		SET dept_type = 'medium';
	ElSE
		Set dept_type = 'small';
	END IF;
	
	SELECT dept_name, @curr_num_employees, dept_type	
	FROM departments
	WHERE dept_no = department_number;
END $$

Delimiter ; $$

		--<to call it and test>--
CALL sp_dept_size('d009');




--< NUMBER 5 >--
--< Gets average salaray per title per department >--
--< No input perameter, just used to save retyping many lines of code >--

Delimiter $$

CREATE PROCEDURE sp_average_salaries (
	
)
BEGIN
Select d.dept_name AS 'Department Name', 
	t.title AS Title, 
	Format(AVG(s.salary), 2) AS 'Average Salary', 
	COUNT(*) AS Employees
From current_dept_emp cur
Join departments d ON cur.dept_no = d.dept_no
Join salaries s ON cur.emp_no = s.emp_no
Join titles t On s.emp_no = t.emp_no
where cur.to_date = '9999-01-01'
Group by d.dept_no, t.title
Order by d.dept_name, t.title;

END $$

Delimiter ; $$

		--<to call it and test>--
CALL sp_average_salaries();




